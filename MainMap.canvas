{
	"nodes":[
		{"id":"e4d293f331ae821f","type":"group","x":5320,"y":-4440,"width":2262,"height":1400,"label":"İsimsiz grup"},
		{"id":"9b3acfe5aaa0357c","type":"text","text":"","x":6322,"y":-4462,"width":250,"height":60},
		{"id":"be46450db2cae69a","type":"text","text":"# Mind map of Local enumeration","x":-1573,"y":-344,"width":392,"height":104,"color":"1"},
		{"id":"179094e6ba2d2b2c","type":"text","text":"## Check system on domain or workgroup\n\n``` powershell\n\n(Get-WmiObject Win32_ComputerSystem).PartOfDomain\n(Get-WmiObject Win32_ComputerSystem).Domain\n\n```\n\n``` CMD\nwmic computersystem get domain,partofdomain\n```","x":-1014,"y":-434,"width":522,"height":285},
		{"id":"0293d6c1b4598b68","type":"text","text":"## Workgroup","x":-220,"y":180,"width":250,"height":60},
		{"id":"c5163b6b6363c2cc","type":"text","text":"## Domain","x":-220,"y":-1060,"width":250,"height":60},
		{"id":"7cbcd8d7c655e4a0","type":"text","text":"1. ajkvbja","x":-973,"y":2160,"width":250,"height":60},
		{"id":"5e4853e16f6e2c51","type":"text","text":"2. vuhnj","x":-973,"y":2287,"width":250,"height":60},
		{"id":"cc04bc8b82d49831","type":"text","text":"# PrivEsc","x":-1573,"y":2404,"width":392,"height":104,"color":"1"},
		{"id":"01fab04a893dad59","type":"text","text":"## Plain Text Enumeration","x":265,"y":480,"width":480,"height":72},
		{"id":"d6e64fa63a72c81c","type":"text","text":"## Network Enumeration","x":265,"y":320,"width":480,"height":69},
		{"id":"21ee6403bcef705c","type":"text","text":"## Service Enumeration","x":268,"y":174,"width":477,"height":72},
		{"id":"600906e6cbe095c9","type":"text","text":"## Scheduler Enumeration","x":264,"y":0,"width":481,"height":84},
		{"id":"cf583c4a27b0e639","type":"text","text":"salam","x":318,"y":-1468,"width":250,"height":60},
		{"id":"0fa1c224d7cca2a6","type":"text","text":"whoami /all\n`net user %username%`\n","x":840,"y":251,"width":820,"height":531},
		{"id":"e52f0d2795d28cb6","type":"text","text":"## Enumerate current user information","x":265,"y":640,"width":480,"height":78},
		{"id":"c51a0bc74fa8fb4a","type":"text","text":"Certainly! Below is a detailed table that outlines the enumeration commands for Windows, specifying the environment (CMD or PowerShell), required privileges (Normal User or Admin), what to look for in the output, and potential exploitation opportunities:\n\n| Command                                                                  | CMD                                                                                                                                             | PowerShell | Privileges  | What to Look For                         | Potential Exploit                                                                                |                                                                            |\n| ------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------- | ---------- | ----------- | ---------------------------------------- | ------------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------- |\n| `whoami`                                                                 | ✓                                                                                                                                               | ✓          | Normal User | Current username                         | Identify if user is an admin or part of privileged groups.                                       |                                                                            |\n| `echo %username%`                                                        | ✓                                                                                                                                               |            | Normal User | Current username                         | Similar to `whoami`.                                                                             |                                                                            |\n| `net user %username%`                                                    | ✓                                                                                                                                               | ✓          | Normal User | Detailed user information                | Look for \"Password never expires\" or weak password policies. Attempt password guessing.          |                                                                            |\n| `whoami /priv`                                                           | ✓                                                                                                                                               | ✓          | Normal User | List of privileges                       | Look for `SeDebugPrivilege`, `SeImpersonatePrivilege`, `SeBackupPrivilege`, etc.                 |                                                                            |\n| `whoami /groups`                                                         | ✓                                                                                                                                               | ✓          | Normal User | User's group memberships                 | Membership in groups like Administrators, Backup Operators, or Remote Desktop Users.             |                                                                            |\n| `net localgroup`                                                         | ✓                                                                                                                                               | ✓          | Normal User | List of local groups and members         | Identify misconfigured group memberships for potential exploitation.                             |                                                                            |\n| `query user`                                                             | ✓                                                                                                                                               | ✓          | Normal User | Logged on users                          | Identify sessions for hijacking or lateral movement.                                             |                                                                            |\n| `set`                                                                    | ✓                                                                                                                                               |            | Normal User | Environment variables                    | Sensitive info like paths, passwords, or tokens. Use exposed paths to find writable directories. |                                                                            |\n| `Get-ChildItem Env:`                                                     |                                                                                                                                                 | ✓          | Normal User | Environment variables                    | Same as above.                                                                                   |                                                                            |\n| `whoami /user`                                                           | ✓                                                                                                                                               | ✓          | Normal User | User's Security Identifier (SID)         | Use SID to look up user privileges in security policies.                                         |                                                                            |\n| `wevtutil qe Security /q:\"*[System/EventID=4624]\" /f:text /rd:true /c:1` | ✓                                                                                                                                               | ✓          | Admin       | Recent logon events                      | Identify successful logons and correlate with exploitable sessions.                              |                                                                            |\n| `net user`                                                               | ✓                                                                                                                                               | ✓          | Normal User | List of all user accounts                | Identify weak or default accounts. Attempt password spraying or brute force.                     |                                                                            |\n| `whoami /all`                                                            | ✓                                                                                                                                               | ✓          | Normal User | Detailed token privileges                | Similar to `whoami /priv`. Look for exploitable privileges.                                      |                                                                            |\n| `net localgroup administrators`                                          | ✓                                                                                                                                               | ✓          | Admin       | Members of the Administrators group      | Confirm if your account is listed or find ways to add it.                                        |                                                                            |\n| `wmic useraccount where name='%username%' get /all`                      | ✓                                                                                                                                               | ✓          | Admin       | Comprehensive user account details       | Use information for further targeting and exploitation.                                          |                                                                            |\n| `auditpol /get /category:*`                                              | ✓                                                                                                                                               | ✓          | Admin       | Current audit policies                   | Identify if auditing is lax or improperly configured, allowing stealthy exploitation.            |                                                                            |\n| `Get-WmiObject -Class Win32_ComputerSystem`                              |                                                                                                                                                 | ✓          | Normal User | Info about the logged-in user and system | Correlate with other findings for targeted attacks.                                              |                                                                            |\n| `Get-Process                                                             | Select-Object -Property Id,ProcessName,@{Name=\"Owner\";Expression={(Get-WmiObject Win32_Process -Filter \"ProcessId=$($_.Id)\").GetOwner().User}}` |            | ✓           | Admin                                    | Ownership of running processes                                                                   | Identify processes owned by privileged users to hijack or manipulate them. |\n\n### Summary\n\nThis table provides a comprehensive overview of useful enumeration commands, environments where they can be run (CMD or PowerShell), the required user privileges, and what to look for in the output. The final column links each command's output to potential privilege escalation opportunities, helping to identify misconfigurations, excessive privileges, and other security gaps that can be exploited. If you need any further details or additional scenarios, feel free to ask!","x":5381,"y":-2780,"width":3077,"height":820},
		{"id":"26288f0f435e7e57","type":"text","text":"Understood. Here’s a more detailed approach that ties enumeration commands to potential privilege escalation opportunities, including what to look for in the output and how to leverage it.\n\n### Windows Commands for Enumeration and Privilege Escalation\n\n#### Whoami\n- **Command**: `whoami`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Normal User\n- **What to Look For**: The current username. Identify if the user is an admin or belongs to privileged groups.\n- **Potential Exploit**: If the user is an admin, directly attempt administrative tasks. If not, look for misconfigurations.\n\n#### Echo %username%\n- **Command**: `echo %username%`\n- **Environment**: CMD\n- **Privileges**: Normal User\n- **What to Look For**: The current username. Similar to `whoami`.\n\n#### Userinfo\n- **Command**: `net user %username%`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Normal User\n- **What to Look For**: Detailed user information, account settings, and group memberships.\n- **Potential Exploit**: Look for \"Password never expires\" or \"User may change password\". If password policies are weak, attempt password guessing.\n\n#### Privileges\n- **Command**: `whoami /priv`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Normal User\n- **What to Look For**: List of privileges assigned to the current user.\n- **Potential Exploit**: Look for privileges like `SeDebugPrivilege`, `SeImpersonatePrivilege`, `SeBackupPrivilege`, etc. These can often be leveraged for privilege escalation (e.g., using tools like Juicy Potato).\n\n#### Groups\n- **Command**: `whoami /groups`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Normal User\n- **What to Look For**: Groups the user is a member of.\n- **Potential Exploit**: Membership in privileged groups such as Administrators, Backup Operators, or Remote Desktop Users can provide vectors for escalation.\n\n#### Local Group Membership\n- **Command**: `net localgroup`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Normal User\n- **What to Look For**: List of all local groups and their members.\n- **Potential Exploit**: Identify any misconfigured group memberships that can be exploited (e.g., if a non-admin user is part of the Administrators group).\n\n#### Logged on Users\n- **Command**: `query user`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Normal User\n- **What to Look For**: Users currently logged on.\n- **Potential Exploit**: Identify sessions that might be hijacked or used for lateral movement.\n\n#### Environment Variables\n- **Command (CMD)**: `set`\n- **Command (PowerShell)**: `Get-ChildItem Env:`\n- **Privileges**: Normal User\n- **What to Look For**: Sensitive information stored in environment variables, such as paths, passwords, or tokens.\n- **Potential Exploit**: Use exposed paths to find writable directories or binaries. Use credentials/tokens for further exploitation.\n\n#### User SID\n- **Command**: `whoami /user`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Normal User\n- **What to Look For**: User's Security Identifier (SID).\n- **Potential Exploit**: Use SID to look up user privileges in security policies.\n\n#### Logon Events\n- **Command**: `wevtutil qe Security /q:\"*[System/EventID=4624]\" /f:text /rd:true /c:1`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Admin\n- **What to Look For**: Recent logon events.\n- **Potential Exploit**: Identify successful logons and correlate with potentially exploitable sessions.\n\n#### List All Users\n- **Command**: `net user`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Normal User\n- **What to Look For**: List of all user accounts.\n- **Potential Exploit**: Identify weak or default accounts. Attempt password spraying or brute force.\n\n#### Check Current User Token Privileges\n- **Command**: `whoami /all`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Normal User\n- **What to Look For**: Detailed token privileges.\n- **Potential Exploit**: Similar to `whoami /priv`. Look for exploitable privileges.\n\n### Additional Commands for Admin Users\n\n#### List Local Administrators Group Members\n- **Command**: `net localgroup administrators`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Admin\n- **What to Look For**: Members of the Administrators group.\n- **Potential Exploit**: Confirm if your account is listed or find ways to add it.\n\n#### Detailed User Account Information\n- **Command**: `wmic useraccount where name='%username%' get /all`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Admin\n- **What to Look For**: Comprehensive user account details.\n- **Potential Exploit**: Use information for further targeting and exploitation.\n\n#### Audit Policies\n- **Command**: `auditpol /get /category:*`\n- **Environment**: CMD / PowerShell\n- **Privileges**: Admin\n- **What to Look For**: Current audit policies.\n- **Potential Exploit**: Identify if auditing is lax or improperly configured, which might allow stealthy exploitation.\n\n### PowerShell Specific Commands\n\n#### Get Current User Information\n- **Command**: `Get-WmiObject -Class Win32_ComputerSystem`\n- **Environment**: PowerShell\n- **Privileges**: Normal User\n- **What to Look For**: Information about the logged-in user and system.\n- **Potential Exploit**: Correlate with other findings for targeted attacks.\n\n#### Get Process Owner\n- **Command**: `Get-Process | Select-Object -Property Id,ProcessName,@{Name=\"Owner\";Expression={(Get-WmiObject Win32_Process -Filter \"ProcessId=$($_.Id)\").GetOwner().User}}`\n- **Environment**: PowerShell\n- **Privileges**: Admin\n- **What to Look For**: Ownership of running processes.\n- **Potential Exploit**: Identify processes owned by privileged users to hijack or manipulate them.\n\n### Summary\n\nThis structured approach helps to identify potential privilege escalation vectors based on the output of enumeration commands. The key is to analyze the results for misconfigurations, excessive privileges, and other security gaps that can be exploited to escalate privileges, whether locally, horizontally, or vertically. If you need further details or additional scenarios, feel free to ask!","x":6920,"y":-1744,"width":1545,"height":3190},
		{"id":"b79c8457213d5381","type":"text","text":"Got it! Here's a revised list that specifies whether each command should be run in Command Prompt (cmd) or PowerShell, and whether it requires administrative privileges or can be run as a normal user.\n\n### Windows Commands\n\n1. **Whoami**\n   - **Command**: `whoami`\n   - **Environment**: CMD / PowerShell\n   - **Privileges**: Normal User\n\n2. **Echo %username%**\n   - **Command**: `echo %username%`\n   - **Environment**: CMD\n   - **Privileges**: Normal User\n\n3. **Userinfo**\n   - **Command**: `net user %username%`\n   - **Environment**: CMD / PowerShell\n   - **Privileges**: Normal User\n\n4. **Privileges**\n   - **Command**: `whoami /priv`\n   - **Environment**: CMD / PowerShell\n   - **Privileges**: Normal User\n\n5. **Groups**\n   - **Command**: `whoami /groups`\n   - **Environment**: CMD / PowerShell\n   - **Privileges**: Normal User\n\n6. **Local Group Membership**\n   - **Command**: `net localgroup`\n   - **Environment**: CMD / PowerShell\n   - **Privileges**: Normal User\n\n7. **Logged on Users**\n   - **Command**: `query user`\n   - **Environment**: CMD / PowerShell\n   - **Privileges**: Normal User\n\n8. **Environment Variables**\n   - **Command**: `set`\n   - **Environment**: CMD\n   - **Privileges**: Normal User\n\n   - **Command**: `Get-ChildItem Env:`\n   - **Environment**: PowerShell\n   - **Privileges**: Normal User\n\n9. **User SID**\n   - **Command**: `whoami /user`\n   - **Environment**: CMD / PowerShell\n   - **Privileges**: Normal User\n\n10. **Logon Events**\n    - **Command**: `wevtutil qe Security /q:\"*[System/EventID=4624]\" /f:text /rd:true /c:1`\n    - **Environment**: CMD / PowerShell\n    - **Privileges**: Admin\n\n11. **List All Users**\n    - **Command**: `net user`\n    - **Environment**: CMD / PowerShell\n    - **Privileges**: Normal User\n\n12. **Check Current User Token Privileges**\n    - **Command**: `whoami /all`\n    - **Environment**: CMD / PowerShell\n    - **Privileges**: Normal User\n\n### Additional Commands for Admin Users\n\n13. **List Local Administrators Group Members**\n    - **Command**: `net localgroup administrators`\n    - **Environment**: CMD / PowerShell\n    - **Privileges**: Admin\n\n14. **Detailed User Account Information**\n    - **Command**: `wmic useraccount where name='%username%' get /all`\n    - **Environment**: CMD / PowerShell\n    - **Privileges**: Admin\n\n15. **Audit Policies**\n    - **Command**: `auditpol /get /category:*`\n    - **Environment**: CMD / PowerShell\n    - **Privileges**: Admin\n\n### PowerShell Specific Commands\n\n16. **Get Current User Information**\n    - **Command**: `Get-WmiObject -Class Win32_ComputerSystem`\n    - **Environment**: PowerShell\n    - **Privileges**: Normal User\n\n17. **Get Process Owner**\n    - **Command**: `Get-Process | Select-Object -Property Id,ProcessName,@{Name=\"Owner\";Expression={(Get-WmiObject Win32_Process -Filter \"ProcessId=$($_.Id)\").GetOwner().User}}`\n    - **Environment**: PowerShell\n    - **Privileges**: Admin\n\n### Summary Table\n\n| Command                                   | CMD | PowerShell | Normal User | Admin |\n| ----------------------------------------- | --- | ---------- | ----------- | ----- |\n| whoami                                    | ✓   | ✓          | ✓           |       |\n| echo %username%                           | ✓   |            | ✓           |       |\n| net user %username%                       | ✓   | ✓          | ✓           |       |\n| whoami /priv                              | ✓   | ✓          | ✓           |       |\n| whoami /groups                            | ✓   | ✓          | ✓           |       |\n| net localgroup                            | ✓   | ✓          | ✓           |       |\n| query user                                | ✓   | ✓          | ✓           |       |\n| set                                       | ✓   |            | ✓           |       |\n| Get-ChildItem Env:                        |     | ✓          | ✓           |       |\n| whoami /user                              | ✓   | ✓          | ✓           |       |\n| wevtutil qe Security                      | ✓   | ✓          |             | ✓     |\n| net user                                  | ✓   | ✓          | ✓           |       |\n| whoami /all                               | ✓   | ✓          | ✓           |       |\n| net localgroup administrators             | ✓   | ✓          |             | ✓     |\n| wmic useraccount                          | ✓   | ✓          |             | ✓     |\n| auditpol /get /category:*                 | ✓   | ✓          |             | ✓     |\n| Get-WmiObject -Class Win32_ComputerSystem |     | ✓          | ✓           |       |\n| Get-Process (with owner info)             |     | ✓          |             | ✓     |\n\nThis comprehensive list should cover your needs for enumerating current user information on Windows machines, distinguishing between CMD and PowerShell, and noting the required privileges. If you need any further modifications or additional commands, let me know!","x":7328,"y":1764,"width":1137,"height":692},
		{"id":"5976577cb58e23b8","type":"text","text":"```\nC:\\Users\\duser>whoami /privrivilege Name                Description                         State                                                 ============================= =================================== ========                                              SeMachineAccountPrivilege     Add workstations to domain          Disabled                                              SeSystemtimePrivilege         Change the system time              Disabled                                              SeBackupPrivilege             Back up files and directories       Disabled                                              SeRestorePrivilege            Restore files and directories       Disabled                                              SeShutdownPrivilege           Shut down the system                Disabled                                              SeChangeNotifyPrivilege       Bypass traverse checking            Enabled                                               SeRemoteShutdownPrivilege     Force shutdown from a remote system Disabled                                              SeIncreaseWorkingSetPrivilege Increase a process working set      Disabled                                              SeTimeZonePrivilege           Change the time zone                Disabled \n```","x":2240,"y":-2168,"width":1097,"height":417},
		{"id":"4b7092735cae9b8a","type":"text","text":"### Windows Commands for Local Enumeration\n\n#### Whoami /all\n- **Command**: `whoami all`\n- **What to Look For**: The current username. Identify if the user is an admin or belongs to privileged groups.\n- **Potential Exploit**: If the user is an admin, directly attempt Privesc sub-node number 1. If not, look for misconfigurations.","x":6059,"y":-4272,"width":552,"height":270},
		{"id":"f2b734d7f8b55978","type":"text","text":"## Enumerate current user information","x":5400,"y":-4176,"width":480,"height":78},
		{"id":"1702d068f8f02360","type":"text","text":"## Privilege Escalation","x":5420,"y":-3826,"width":460,"height":80},
		{"id":"a17656d6ba19b2fb","type":"text","text":"### 1\n\n.......","x":6059,"y":-3880,"width":354,"height":188},
		{"id":"b8c4ea425a3e9bc6","type":"text","text":"### Environment and  Minimum Privilege Required\n\n| Command     | CMD | PowerShell | Normal User | Admin |\n| ----------- | --- | ---------- | ----------- | ----- |\n| whoami /all | ✓   | ✓          | ✓           |       |\n","x":6660,"y":-3520,"width":520,"height":270},
		{"id":"9d18edeeef5378a3","type":"text","text":"## Enumerate current user information","x":5520,"y":-8424,"width":480,"height":78},
		{"id":"8463faeb911d6e9e","type":"text","text":"```CMD\n#Get information about current user\nwhoami /all #Get all information about current user, take a look at the enabled tokens\nwhoami /priv #Show only privileges\nnet user duser #Get information about specific user\n```\n```PowerShell\nGet-WmiObject -Class Win32_UserAccount -Filter \"Name='duser'\"\nGet-LocalUser -Name duser | Select * #Get information about specific local user\n```\n\n```\nnet localgroup #All available groups\nnet localgroup Administrators #Info about specific a group\nnet localgroup administrators [username] /add #Add user to administrators\n```\n\n```NET_Classes\n#Check if you are Admin\n$cuaccess=[System.Security.Principal.WindowsIdentity]::GetCurrent()\n$cuprivilege=New-Object System.Security.Principal.WindowsPrincipal($cuaccess)\n$cuprivilege.IsInRole([System.Security.Principal.WindowsBuiltInRole]::Administrator)\n```\n\n```\nnet accounts #Information about password requirements\n```\n\n```CMD\ncmdkey /list #List credential\nvaultcmd /listcreds:\"Windows Credentials\" /all #List Windows vault\nrundll32 keymgr.dll, KRShowKeyMgr #You need graphical access\n```\n\n```CMD\nicacls \"C:\\example\\file.txt\" #Display or modify discretionary access control lists (DACLs) on specified files.\nicacls \"C:\\example\\folder\" /T #Recursively check permissions of all files and folders within a directory.\n```\n\n```PowerShell\nGet-Acl \"C:\\example\\file.txt\"  #Retrieve the security descriptor for a resource, such as a file or folder.\nGet-ChildItem \"C:\\example\\folder\\\" -Recurse | Get-Acl | Format-Table #Get the permissions of all files and folders within a directory recursively:\n```\n\n\n```CMD\n#List sessions\nqwinsta\nklist sessions\n```","x":6200,"y":-8539,"width":1341,"height":752},
		{"id":"6f1fc4d591426f3f","type":"text","text":"- **Look for**: Any high-value privileges that are enabled. Common ones include:\n    - **SeDebugPrivilege**: Allows debugging of processes, often used to escalate privileges.\n    - **SeImpersonatePrivilege**: Allows the user to impersonate another user.\n    - **SeBackupPrivilege** and **SeRestorePrivilege**: Can be used to back up and restore files, potentially overwriting sensitive system files.","x":7900,"y":-8639,"width":1260,"height":139},
		{"id":"c327747149ea144b","x":7900,"y":-8460,"width":1260,"height":123,"type":"text","text":"- **Look for**:\n     - **Local Group Memberships**: Membership in groups like `Administrators`, `Server Operators`, `Backup Operators`, etc., can provide elevated privileges.\n   - **Account Settings**: Check if the account has any special configurations, such as password never expiring, or if the user has the ability to change their password."},
		{"id":"1e1891dd3db982aa","type":"text","text":"\n```\n# Add local user and put them local Administrators group\nnet user username password /ADD\nnet localgroup Administrators username /ADD\n```\n\n```\n# Add user to insteresting groups:\nnet localgroup \"Remote Desktop Users\" UserLoginName  /add\nnet localgroup \"Debugger users\" UserLoginName /add\nnet localgroup \"Power users\" UserLoginName /add\n```","x":7900,"y":-8298,"width":1260,"height":271},
		{"id":"18fd90444724a052","type":"text","text":" - **Look for**: Weak account policies, such as no password requirements, which could be exploited.","x":7900,"y":-8000,"width":1260,"height":60},
		{"id":"0eed036b987e5081","type":"text","text":"1. **`icacls`**:\n    \n    - Displays or modifies discretionary access control lists (DACLs) on specified files.\n        - **Look for**:\n            - Files or folders where the current user has write permissions. This can be used to replace executable files with malicious ones.\n            - Misconfigured permissions that allow broader access than intended.\n2. **PowerShell - `Get-Acl`**:\n    \n    - Retrieves the security descriptor for a resource.\n        - **Look for**:\n            - Permissions that allow the current user to modify files or directories that should be restricted.\n            - Files or folders owned by the user, which can often be manipulated for privilege escalation.","x":7900,"y":-7900,"width":1260,"height":320},
		{"id":"097b7d3446abe131","type":"text","text":"### Environment and  Minimum Privilege Required\n\n| Command     | CMD | PowerShell | Normal User | Admin |\n| ----------- | --- | ---------- | ----------- | ----- |\n| whoami /all | ✓   | ✓          | ✓           |       |\n","x":6440,"y":-7200,"width":530,"height":270},
		{"id":"ca12cde852f79cb9","type":"text","text":"## Privilege Escalation","x":5397,"y":-7480,"width":460,"height":80},
		{"id":"fa7f1444b46be21c","type":"text","text":"### 1\n\n.......","x":6023,"y":-7200,"width":354,"height":188}
	],
	"edges":[
		{"id":"4fbd4e9740b99ccf","fromNode":"cc04bc8b82d49831","fromSide":"right","toNode":"7cbcd8d7c655e4a0","toSide":"left"},
		{"id":"d0dc2ab83ca8de65","fromNode":"be46450db2cae69a","fromSide":"right","toNode":"179094e6ba2d2b2c","toSide":"left"},
		{"id":"64037bd9776cb381","fromNode":"179094e6ba2d2b2c","fromSide":"right","toNode":"c5163b6b6363c2cc","toSide":"left"},
		{"id":"78f90cab6eb5565b","fromNode":"179094e6ba2d2b2c","fromSide":"right","toNode":"0293d6c1b4598b68","toSide":"left"},
		{"id":"feef6b662059d6df","fromNode":"0293d6c1b4598b68","fromSide":"right","toNode":"e52f0d2795d28cb6","toSide":"left"},
		{"id":"253848cd8f5eca7c","fromNode":"e52f0d2795d28cb6","fromSide":"right","toNode":"0fa1c224d7cca2a6","toSide":"left"},
		{"id":"bab74485977c0911","fromNode":"0293d6c1b4598b68","fromSide":"right","toNode":"d6e64fa63a72c81c","toSide":"left"},
		{"id":"917e6e7949b0f481","fromNode":"0293d6c1b4598b68","fromSide":"right","toNode":"01fab04a893dad59","toSide":"left"},
		{"id":"42109045655acd1e","fromNode":"0293d6c1b4598b68","fromSide":"right","toNode":"21ee6403bcef705c","toSide":"left"},
		{"id":"45a63d56fe5e62ee","fromNode":"0293d6c1b4598b68","fromSide":"right","toNode":"600906e6cbe095c9","toSide":"left"},
		{"id":"83f79bad48c827d9","fromNode":"c5163b6b6363c2cc","fromSide":"right","toNode":"cf583c4a27b0e639","toSide":"left"},
		{"id":"659ace22597ab639","fromNode":"f2b734d7f8b55978","fromSide":"right","toNode":"4b7092735cae9b8a","toSide":"left"},
		{"id":"d966cde83e91b542","fromNode":"1702d068f8f02360","fromSide":"right","toNode":"a17656d6ba19b2fb","toSide":"left"},
		{"id":"bf3ccd9d90d721ad","fromNode":"ca12cde852f79cb9","fromSide":"right","toNode":"fa7f1444b46be21c","toSide":"left"},
		{"id":"27306da9bd74e7c3","fromNode":"9d18edeeef5378a3","fromSide":"right","toNode":"8463faeb911d6e9e","toSide":"left"},
		{"id":"1a2176f504b911f7","fromNode":"8463faeb911d6e9e","fromSide":"right","toNode":"0eed036b987e5081","toSide":"left","label":"permissions of the files and folders"},
		{"id":"c41da9291eac14aa","fromNode":"8463faeb911d6e9e","fromSide":"right","toNode":"6f1fc4d591426f3f","toSide":"left"},
		{"id":"866a358d17e8683e","fromNode":"8463faeb911d6e9e","fromSide":"right","toNode":"18fd90444724a052","toSide":"left"},
		{"id":"41f672e02ea50a69","fromNode":"8463faeb911d6e9e","fromSide":"right","toNode":"c327747149ea144b","toSide":"left"},
		{"id":"8ff1735d2e0ce0ec","fromNode":"8463faeb911d6e9e","fromSide":"right","toNode":"1e1891dd3db982aa","toSide":"left","label":"If you are Admin..."}
	]
}